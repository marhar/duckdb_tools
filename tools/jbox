#!/bin/bash
HELP="\
usage: jbox
Have some json or csv in the clipboard, then run this script.
Interactive commands:
  j: load JSON from clipboard
  c: load CSV from clipboard
  -: decrease font size
  =: increase font size
  0: reset font size to default
  q: quit
"
# TODO: add history
#    0 = go to most recent; 1 = go to next most recent; 2 = go to next most recent; etc.

display() {
  # echo font:$(osascript -e 'tell application "Terminal" to return font size of front window')
  duckdb -c "
    SELECT * from b;SELECT * from a;
  " $F
  duckdb -noheader -ascii -c "
    SELECT string_agg(column_name, ',' ORDER BY ordinal_position) z
    FROM information_schema.columns
    WHERE table_schema = 'main' AND table_name = 'a';
  " $F
}

load_common() {
  duckdb -c "
    CREATE OR REPLACE TABLE b AS
    UNPIVOT (
      select * FROM a LIMIT 1
    )
    ON COLUMNS(*)
    INTO
      NAME name
      VALUE value
    ORDER BY name;
  " $F
}

load_json () {
  pbpaste | duckdb -c "
    CREATE OR REPLACE TABLE a AS SELECT columns(*)::text FROM read_json('/dev/stdin');
  " $F
  load_common

}

load_csv () {
  pbpaste | duckdb -c "
    CREATE OR REPLACE TABLE a AS SELECT columns(*)::text FROM read_csv('/dev/stdin');
    CREATE TABLE b AS
    UNPIVOT (
      select * FROM a LIMIT 1
    )
    ON COLUMNS(*)
    INTO
      NAME name
      VALUE value
    ORDER BY name;
  " $F
}

font_size() {
    local delta=$1
    if [[ $delta == "reset" ]]; then
	osascript -e 'tell application "Terminal" to set font size of front window to 12'
    elif [[ $delta == "up" ]]; then
	osascript -e 'tell application "Terminal" to set font size of front window to (font size of front window) + 1'
    elif [[ $delta == "down" ]]; then
	osascript -e 'tell application "Terminal" to set font size of front window to (font size of front window) - 1'
    fi
}

cleanup() {
    rm -rf $D
    stty echo icanon
}

#----------------------------------------------------

D=$(mktemp -d)
F=$D/f.db

trap cleanup 0
trap display WINCH

stty -echo -icanon min 1 time 0

load_json
display

while true; do
    IFS= read -r -n1 char
    case "$char" in
        "j")
            load_json
            display
            ;;
        "c")
            load_csv
            display
            ;;
        "-")
            font_size down
            ;;
        "=")
            font_size up
            ;;
        "0")
            font_size reset
            ;;
        "q")
            exit 0
            ;;
        "?")
            echo "$HELP"
            ;;
        *)
            echo "Press 'j' to load JSON, 'c' to load CSV, 'q' to quit, or '?' for help."
            ;;
    esac
done
